// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://somewhere.com/",
        "contact": {
            "name": "API Support",
            "url": "http://somewhere.com/support",
            "email": "support@somewhere.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/AuthAPI/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Create User",
                "operationId": "Create User",
                "parameters": [
                    {
                        "description": "User to be created",
                        "name": "Case",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserInputModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.OutputTokenModel"
                        }
                    }
                }
            }
        },
        "/api/v1/AuthAPI/login": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "operationId": "Login User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "organization",
                        "name": "organization",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.OutputTokenModel"
                        }
                    }
                }
            }
        },
        "/api/v1/AuthAPI/token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Token",
                "operationId": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "grantType",
                        "name": "grantType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "scope",
                        "name": "scope",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "clientId",
                        "name": "clientId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "clientSecret",
                        "name": "clientSecret",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.OutputTokenModel"
                        }
                    }
                }
            }
        },
        "/api/v1/cases": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cases"
                ],
                "summary": "List Cases",
                "operationId": "ListCases",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "start",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "length",
                        "name": "length",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CaseListData"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cases"
                ],
                "summary": "Create a new case",
                "operationId": "Create a new case",
                "parameters": [
                    {
                        "description": "Case data to be created",
                        "name": "Case",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CaseForCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CreateCaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/cases/close/{id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cases"
                ],
                "summary": "Update an existing case status (close or cancel)",
                "operationId": "Update an existing case status (close or cancel)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Case data to be update",
                        "name": "Case",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CaseCloseInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.UpdateCaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/cases/detail/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cases"
                ],
                "summary": "Get a specify case by case code (case_id)",
                "operationId": "Get a specify case by case code (case_id)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "case code",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/cases/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cases"
                ],
                "summary": "Search Case",
                "operationId": "SearchCase",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "start",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "length",
                        "name": "length",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"-1\"",
                        "description": "case_status_code",
                        "name": "css",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "case_id",
                        "name": "cid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "case_detail",
                        "name": "cdl",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "command_code",
                        "name": "cmc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "station_code",
                        "name": "stc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "opened_date (date start)",
                        "name": "fdt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "date_to (date end)",
                        "name": "tdt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user_create",
                        "name": "uce",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "casetype_code",
                        "name": "ctc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"5-DESC\"",
                        "description": "order_by",
                        "name": "odb",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CaseListData"
                        }
                    }
                }
            }
        },
        "/api/v1/cases/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cases"
                ],
                "summary": "Get a specify case by record ID",
                "operationId": "Get a specify case by record ID",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cases"
                ],
                "summary": "Delete an existing case",
                "operationId": "Delete an existing case",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.DeleteCaseResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cases"
                ],
                "summary": "Update an existing case",
                "operationId": "Update an existing case",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Case data to be update",
                        "name": "Case",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CaseForUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.UpdateCaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/casesubtypes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Case Sub Types"
                ],
                "summary": "List Cases Sub Type",
                "operationId": "ListCaseSubTypes",
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/casetypes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Case Types"
                ],
                "summary": "List Cases",
                "operationId": "ListCaseTypes",
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/commands": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commands"
                ],
                "summary": "Get Commands",
                "operationId": "Get Commands",
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/commands/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commands"
                ],
                "summary": "Get Commands by id",
                "operationId": "Get Commands by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/departments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Get Department",
                "operationId": "Get Department",
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/departments/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Get Department by ID",
                "operationId": "Get Department by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/forms/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Form"
                ],
                "summary": "Get Form",
                "operationId": "Get Form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/notes": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create transaction Note",
                "operationId": "Create transaction Note",
                "parameters": [
                    {
                        "description": "Case data to be created",
                        "name": "Case",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CaseNoteInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CaseListData"
                        }
                    }
                }
            }
        },
        "/api/v1/notes/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "List Transaction Note",
                "operationId": "ListTransactionNote",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CaseListData"
                        }
                    }
                }
            }
        },
        "/api/v1/notifications/delete/{id}": {
            "delete": {
                "description": "ลบ Notification ตาม id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "delete notification by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/notifications/edit/{id}": {
            "put": {
                "description": "เเก้ไข Notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "edit notification (partial input)",
                "parameters": [
                    {
                        "description": "Partial Notification Input",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Notification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/notifications/new": {
            "post": {
                "description": "Create a notification by providing only partial fields. The remaining fields (e.g., ID, caseId, createdAt) will be generated automatically.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Create notification (partial input)",
                "parameters": [
                    {
                        "description": "Partial Notification Input (Do not include: id, caseId, createdAt)",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Notification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/notifications/noti/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notification by ID from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Notification"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/notifications/recipient/{username}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notifications received by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username of the recipient",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Notification"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/notifications/ws": {
            "get": {
                "description": "Opens a WebSocket connection and listens for a username from the client to register for real-time notifications.",
                "tags": [
                    "Notifications"
                ],
                "summary": "WebSocket endpoint for real-time notifications by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username used to establish WebSocket connection",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols (WebSocket Upgrade)"
                    },
                    "400": {
                        "description": "Missing or invalid username query parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error or WebSocket upgrade failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/stations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stations"
                ],
                "summary": "Get Stations",
                "operationId": "Get Stations",
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/stations/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stations"
                ],
                "summary": "Get Stations by id",
                "operationId": "Get Stations  by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/trans": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "List Transaction",
                "operationId": "ListTransaction",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "start",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "length",
                        "name": "length",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CaseListData"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create transaction",
                "operationId": "Create transaction",
                "parameters": [
                    {
                        "description": "Case data to be created",
                        "name": "Case",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CaseTransactionModelInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CaseTransactionCRUDResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/trans/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a specify transaction by record ID or case code (caseId)",
                "operationId": "Get a specify transaction by record ID or case code (caseId)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CaseListData"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete an existing transaction",
                "operationId": "Delete an existing transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.DeleteCaseResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Update an existing transaction",
                "operationId": "Update an existing transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CaseTransactionUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.CreateCaseResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "operationId": "Get User",
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User by Id",
                "operationId": "Get User by Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/users_with_skills": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User with skills",
                "operationId": "Get User with skills",
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/workflows/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workflow"
                ],
                "summary": "Get Workflow",
                "operationId": "Get Workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Request successful",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CaseCloseInput": {
            "type": "object",
            "properties": {
                "caseStatusCode": {
                    "type": "string"
                },
                "closedDate": {
                    "type": "string"
                },
                "modifiedDate": {
                    "type": "string"
                },
                "resultCode": {
                    "type": "string"
                },
                "resultDetail": {
                    "type": "string"
                },
                "transImg": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Media"
                    }
                },
                "userClose": {
                    "type": "string"
                },
                "userModify": {
                    "type": "string"
                }
            }
        },
        "model.CaseDetailData": {
            "type": "object",
            "properties": {
                "approvedStatus": {
                    "type": "integer"
                },
                "caseDetail": {
                    "type": "string"
                },
                "caseId": {
                    "type": "string"
                },
                "caseLat": {
                    "type": "string"
                },
                "caseLocationAddress": {
                    "type": "string"
                },
                "caseLocationDetail": {
                    "type": "string"
                },
                "caseLon": {
                    "type": "string"
                },
                "caseStatusCode": {
                    "type": "string"
                },
                "caseStatusName": {
                    "type": "string"
                },
                "casetypeCode": {
                    "type": "string"
                },
                "casetypeName": {
                    "type": "string"
                },
                "citizenCode": {
                    "type": "string"
                },
                "citizenFullname": {
                    "type": "string"
                },
                "commandCode": {
                    "type": "string"
                },
                "commandName": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "departmentName": {
                    "type": "string"
                },
                "destLat": {
                    "type": "string"
                },
                "destLocationAddress": {
                    "type": "string"
                },
                "destLocationDetail": {
                    "type": "string"
                },
                "destLon": {
                    "type": "string"
                },
                "extensionReceive": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mediaType": {
                    "type": "integer"
                },
                "modifiedDate": {
                    "type": "string"
                },
                "openedDate": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "policeStationCode": {
                    "type": "string"
                },
                "policeStationName": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "referCaseId": {
                    "type": "string"
                },
                "responsible": {
                    "type": "string"
                },
                "savedDate": {
                    "type": "string"
                },
                "specialEmergency": {
                    "type": "integer"
                },
                "startedDate": {
                    "type": "string"
                },
                "transImg": {
                    "type": "string"
                },
                "urgentAmount": {
                    "type": "string"
                },
                "userCreate": {
                    "type": "string"
                },
                "userCreateId": {
                    "type": "string"
                },
                "userModify": {
                    "type": "string"
                },
                "vOwner": {
                    "type": "integer"
                },
                "vVin": {
                    "type": "string"
                },
                "ways": {
                    "type": "integer"
                }
            }
        },
        "model.CaseForCreate": {
            "type": "object",
            "properties": {
                "actionProCode": {
                    "type": "string"
                },
                "backdated": {
                    "type": "integer"
                },
                "caseCondition": {
                    "type": "integer"
                },
                "caseDetail": {
                    "type": "string"
                },
                "caseDirection": {
                    "type": "string"
                },
                "caseLat": {
                    "type": "string"
                },
                "caseLocationAddress": {
                    "type": "string"
                },
                "caseLocationDetail": {
                    "type": "string"
                },
                "caseLocationType": {
                    "type": "string"
                },
                "caseLon": {
                    "type": "string"
                },
                "casePhoto": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Media"
                    }
                },
                "caseRoute": {
                    "type": "string"
                },
                "caseSla": {
                    "type": "integer"
                },
                "caseStatusCode": {
                    "type": "string"
                },
                "casetypeCode": {
                    "type": "string"
                },
                "citizenCode": {
                    "type": "string"
                },
                "closedDate": {
                    "type": "string"
                },
                "commandCode": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "destLat": {
                    "type": "string"
                },
                "destLocationAddress": {
                    "type": "string"
                },
                "destLocationDetail": {
                    "type": "string"
                },
                "destLon": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "escapeRoute": {
                    "type": "string"
                },
                "extensionReceive": {
                    "type": "string"
                },
                "home": {
                    "type": "integer"
                },
                "mediaCode": {
                    "type": "string"
                },
                "mediaType": {
                    "type": "integer"
                },
                "modifiedDate": {
                    "type": "string"
                },
                "needAmbulance": {
                    "type": "integer"
                },
                "openedDate": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "phoneNumberHide": {
                    "type": "integer"
                },
                "policeStationCode": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "referCaseId": {
                    "type": "string"
                },
                "specialEmergency": {
                    "type": "integer"
                },
                "startedDate": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "transImg": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Media"
                    }
                },
                "userClose": {
                    "type": "string"
                },
                "userCreate": {
                    "type": "string"
                },
                "userModify": {
                    "type": "string"
                },
                "vOwner": {
                    "type": "integer"
                },
                "vVin": {
                    "type": "string"
                },
                "ways": {
                    "type": "integer"
                }
            }
        },
        "model.CaseForUpdate": {
            "type": "object",
            "properties": {
                "actionProCode": {
                    "type": "string"
                },
                "backdated": {
                    "type": "integer"
                },
                "caseCondition": {
                    "type": "integer"
                },
                "caseDetail": {
                    "type": "string"
                },
                "caseDirection": {
                    "type": "string"
                },
                "caseLat": {
                    "type": "string"
                },
                "caseLocationAddress": {
                    "type": "string"
                },
                "caseLocationDetail": {
                    "type": "string"
                },
                "caseLocationType": {
                    "type": "string"
                },
                "caseLon": {
                    "type": "string"
                },
                "casePhoto": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Media"
                    }
                },
                "caseRoute": {
                    "type": "string"
                },
                "caseSla": {
                    "type": "integer"
                },
                "caseStatusCode": {
                    "type": "string"
                },
                "casetypeCode": {
                    "type": "string"
                },
                "citizenCode": {
                    "type": "string"
                },
                "closedDate": {
                    "type": "string"
                },
                "commandCode": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "destLat": {
                    "type": "string"
                },
                "destLocationAddress": {
                    "type": "string"
                },
                "destLocationDetail": {
                    "type": "string"
                },
                "destLon": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "escapeRoute": {
                    "type": "string"
                },
                "extensionReceive": {
                    "type": "string"
                },
                "home": {
                    "type": "integer"
                },
                "mediaCode": {
                    "type": "string"
                },
                "mediaType": {
                    "type": "integer"
                },
                "modifiedDate": {
                    "type": "string"
                },
                "needAmbulance": {
                    "type": "integer"
                },
                "openedDate": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "phoneNumberHide": {
                    "type": "integer"
                },
                "policeStationCode": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "referCaseId": {
                    "type": "string"
                },
                "specialEmergency": {
                    "type": "integer"
                },
                "startedDate": {
                    "type": "string"
                },
                "transImg": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Media"
                    }
                },
                "userClose": {
                    "type": "string"
                },
                "userCreate": {
                    "type": "string"
                },
                "userModify": {
                    "type": "string"
                },
                "vOwner": {
                    "type": "integer"
                },
                "vVin": {
                    "type": "string"
                },
                "ways": {
                    "type": "integer"
                }
            }
        },
        "model.CaseListData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OutputCase"
                    }
                },
                "draw": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "recordsFiltered": {
                    "type": "integer"
                },
                "recordsTotal": {
                    "type": "integer"
                }
            }
        },
        "model.CaseNoteInput": {
            "type": "object",
            "properties": {
                "caseId": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "modifiedDate": {
                    "type": "string"
                },
                "userCreate": {
                    "type": "string"
                },
                "userModify": {
                    "type": "string"
                }
            }
        },
        "model.CaseResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.CaseDetailData"
                },
                "desc": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.CaseTransactionCRUDResponse": {
            "type": "object",
            "properties": {
                "caseId": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.CaseTransactionModelInput": {
            "type": "object",
            "properties": {
                "actionCarType": {
                    "type": "string"
                },
                "arriveDate": {
                    "type": "string"
                },
                "arrivedDate": {
                    "type": "string"
                },
                "cancelDate": {
                    "type": "string"
                },
                "caseId": {
                    "type": "string"
                },
                "caseStatusCode": {
                    "type": "string"
                },
                "closeDate": {
                    "type": "string"
                },
                "closedDate": {
                    "type": "string"
                },
                "commandedDate": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "createdModify": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "lat": {
                    "description": "Consider float64 if GPS",
                    "type": "string"
                },
                "lon": {
                    "type": "string"
                },
                "modifiedDate": {
                    "type": "string"
                },
                "notiStage": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "receiveDate": {
                    "type": "string"
                },
                "receivedDate": {
                    "type": "string"
                },
                "resultCode": {
                    "type": "string"
                },
                "resultDetail": {
                    "type": "string"
                },
                "suggestRoute": {
                    "type": "string"
                },
                "timeToArrive": {
                    "description": "If it’s a string, keep as-is; else change to time.Duration or time.Time",
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updatedAccount": {
                    "type": "string"
                },
                "userArrive": {
                    "type": "string"
                },
                "userClose": {
                    "type": "string"
                },
                "userClosedJob": {
                    "type": "string"
                },
                "userCode": {
                    "type": "string"
                },
                "userCommand": {
                    "type": "string"
                },
                "userModify": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "userReceive": {
                    "type": "string"
                },
                "userSla": {
                    "type": "integer"
                },
                "vehicleCode": {
                    "type": "string"
                },
                "viewed": {
                    "type": "integer"
                }
            }
        },
        "model.CaseTransactionUpdateInput": {
            "type": "object",
            "properties": {
                "actionCarType": {
                    "type": "string"
                },
                "arriveDate": {
                    "type": "string"
                },
                "arrivedDate": {
                    "type": "string"
                },
                "cancelDate": {
                    "type": "string"
                },
                "caseId": {
                    "type": "string"
                },
                "caseStatusCode": {
                    "type": "string"
                },
                "closeDate": {
                    "type": "string"
                },
                "closedDate": {
                    "type": "string"
                },
                "commandedDate": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "createdModify": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "lat": {
                    "description": "Consider float64 if GPS",
                    "type": "string"
                },
                "lon": {
                    "type": "string"
                },
                "modifiedDate": {
                    "type": "string"
                },
                "notiStage": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "receiveDate": {
                    "type": "string"
                },
                "receivedDate": {
                    "type": "string"
                },
                "resultCode": {
                    "type": "string"
                },
                "resultDetail": {
                    "type": "string"
                },
                "suggestRoute": {
                    "type": "string"
                },
                "timeToArrive": {
                    "description": "If it’s a string, keep as-is; else change to time.Duration or time.Time",
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updatedAccount": {
                    "type": "string"
                },
                "userArrive": {
                    "type": "string"
                },
                "userClose": {
                    "type": "string"
                },
                "userClosedJob": {
                    "type": "string"
                },
                "userCode": {
                    "type": "string"
                },
                "userCommand": {
                    "type": "string"
                },
                "userModify": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "userReceive": {
                    "type": "string"
                },
                "userSla": {
                    "type": "integer"
                },
                "vehicleCode": {
                    "type": "string"
                },
                "viewed": {
                    "type": "integer"
                }
            }
        },
        "model.CreateCaseResponse": {
            "type": "object",
            "properties": {
                "caseId": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.DeleteCaseResponse": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Media": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Notification": {
            "type": "object",
            "properties": {
                "caseDetail": {
                    "type": "string"
                },
                "caseId": {
                    "type": "string"
                },
                "caseType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "eventType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "read": {
                    "type": "boolean"
                },
                "recipient": {
                    "type": "string"
                },
                "redirectURL": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                }
            }
        },
        "model.OutputCase": {
            "type": "object",
            "properties": {
                "CasetypeCode": {
                    "type": "string"
                },
                "caseDetail": {
                    "type": "string"
                },
                "caseId": {
                    "type": "string"
                },
                "caseLocationAddress": {
                    "type": "string"
                },
                "caseLocationDetail": {
                    "type": "string"
                },
                "caseStatusCode": {
                    "type": "string"
                },
                "caseStatusName": {
                    "type": "string"
                },
                "casetypeName": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mediaType": {
                    "type": "integer"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "specialEmergency": {
                    "type": "integer"
                },
                "stationName": {
                    "type": "string"
                },
                "urgentAmount": {
                    "type": "string"
                },
                "vOwner": {
                    "type": "integer"
                },
                "vVin": {
                    "type": "string"
                }
            }
        },
        "model.OutputTokenModel": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "desc": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.UpdateCaseResponse": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.UserInputModel": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "areaId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "currentLat": {
                    "type": "string"
                },
                "currentLon": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string"
                },
                "orgId": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "pushToken": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "CMS API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
